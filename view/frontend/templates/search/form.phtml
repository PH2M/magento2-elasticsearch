<!--
/**
* Copyright Â© PH2M SARL. All rights reserved.
* See LICENSE for license details.
*/
-->
<div class="grow max-w-lg z-10 w-full mx-auto lg:order-2 order-last col-span-3 lg:col-span-1"
     id="search-content" x-data="initSearch">
    <form action="<?php echo $block->getUrl('catalogsearch/result') ?>" method="get">
        <input name="q"
               id="es_search"
               type="text"
               x-ref="essearch"
               placeholder="<?php echo __('Search a product or a brand') ?>"
               class="!pr-[84px] w-full bg-gray-very-light-warm !h-18 text-dark placeholder:text-xxs placeholder:leading-5 focus:placeholder:font-normal !text-xl !leading-6.75"
               @keyup="runSearch()" />
    </form>
    <div class="absolute bottom-0 translate-y-full z-50 left-0 bg-white w-full grid grid-cols-4 gap-5 p-5 border" x-cloak x-show="products.length > 0 || brands.length > 0">
        <div class="flex flex-col border-r" x-show="brands.length > 0">
            <span class="font-semibold text-lg"><?php echo __('Brands') ?></span>
            <template x-for="brand in brands">
                <a :href="brand.url_key" class="flex items-center gap-3">
                    <span x-text="brand.name"></span>
                </a>
            </template>
        </div>
        <div class="grid" :class="brands.length > 0 ? 'col-span-3 grid-cols-3' : 'col-span-4 grid-cols-4'">
            <template x-for="product in products" :key="product.sku">
                <a :href="product.url_key" class="flex items-center gap-3">
                    <img :src="product.image" :alt="product.name_to_display" width="80" height="80" />
                    <div class="flex flex-col">
                        <span x-text="product.name_to_display"></span>
                        <span class="text-xs" x-text="product.brand_value"></span>
                    </div>
                </a>
            </template>
        </div>
    </div>
</div>
<script>
    function initSearch() {
        return {
            products: [],
            brands: [],
            runSearch() {
                const query = this.$refs.essearch.value;
                if (query.length < 3) {
                    this.products = [];
                    this.brands = [];
                    return;
                }

                let url = BASE_URL + 'es.php?q=' + query + '&store=' + CURRENT_STORE_ID;

                fetch(url, {
                    headers: { "content-type": "application/json" },
                    method: "GET",
                }).then(response => {
                    if (response.ok) {
                        return response.json();
                    }
                }).then(result => {
                    this.products = result['products'];
                    this.brands = result['brands'];
                });
            }
        }
    }
</script>
